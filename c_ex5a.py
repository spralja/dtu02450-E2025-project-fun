#%% Import Modules
from lib import LogisticRegressionModel
import pandas as pd
import numpy as np

#%% Load the dataset
# Importing the data
filename = 'data/glass+identification/glass.csv'

data = pd.read_csv(filename)


attributeNames = np.asarray(data.columns)[1:-1]

rawvalues = data.values
X = rawvalues[:, 1:-1] # Exclude first (Id) and last (Type) columns
y = rawvalues[:, -1] # Last column (Type)

N, M = X.shape

print(f'Number of observations: {N}')

C = 7
classNames = ['building_windows_float_processed', 'building_windows_non_float_processed', 'vehicle_windows_float_processed', #'vehicle_windows_non_float_processed', 
              'containers', 'tableware', 'headlamps']


#%% Set CONSTANTS
regparam = 0.05

#%%
model = LogisticRegressionModel(regparam=regparam)

model.fit(X, y)

#%%

coef = model._model.coef_

print(coef)

np.abs(coef).mean(axis=0)
# %%
avgw = np.abs(coef).mean(axis=0)
classLabels = model._model.classes_

# %%
### Generated by ChatGPT (OpenAI) ###
import seaborn as sns
import pandas as pd
import matplotlib.pyplot as plt

df = pd.DataFrame(coef, index=classNames, columns=attributeNames)

plt.figure(figsize=(10, 6))
sns.heatmap(df, annot=True, center=0, cmap="coolwarm")
plt.title('Signed Feature Weights per Class')
plt.tight_layout()
plt.show()
### ----------------------------- ###
# %%
### Generated by ChatGPT (OpenAI) ###
avg_abs_weights = np.mean(np.abs(coef), axis=0)

# Plot as bar chart
plt.figure(figsize=(10, 6))
plt.bar(attributeNames, avg_abs_weights)
plt.title('Average Absolute Feature Weights Across All Classes')
plt.xlabel('Features')
plt.ylabel('Average |Weight| (log)')
plt.yscale('log')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()
### ----------------------------- ###
# %%
